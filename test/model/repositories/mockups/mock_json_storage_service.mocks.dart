// Mocks generated by Mockito 5.4.6 from annotations
// in prepster/test/model/repositories/mockups/mock_json_storage_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:prepster/model/entities/inventory_item.dart' as _i1;
import 'package:prepster/model/services/json_storage_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [JsonStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonStorageService<T extends _i1.InventoryItem> extends _i2.Mock
    implements _i3.JsonStorageService<T> {
  MockJsonStorageService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> addItem(T? item) =>
      (super.noSuchMethod(
            Invocation.method(#addItem, [item]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<T>> getAllItems() =>
      (super.noSuchMethod(
            Invocation.method(#getAllItems, []),
            returnValue: _i4.Future<List<T>>.value(<T>[]),
          )
          as _i4.Future<List<T>>);

  @override
  _i4.Future<String> deleteItem(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [id]),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#deleteItem, [id]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> updateItem(String? id, T? item) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [id, item]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
